<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="SpliterBrush" Color="#FFACAEB6"/>
    <SolidColorBrush x:Key="Item.Normal.Foreground" Color="White"/>
    <SolidColorBrush x:Key="Item.Normal.Background" Color="#FF555581"/>
    <SolidColorBrush x:Key="AccentBrush" Color="#FF555581"/>
    <SolidColorBrush x:Key="LogItem.Normal.Background" Color="#FFEBEBF5"/>
    <SolidColorBrush x:Key="LogItem.Normal.Foreground" Color="#FF555581"/>
    <SolidColorBrush x:Key="LogItem.Normal.Border" Color="#FF555581"/>
    <SolidColorBrush x:Key="LogItem.Passed.Border" Color="#A840A01C"/>
    <SolidColorBrush x:Key="LogItem.Fail.Border" Color="#FFD62C2C"/>
    <SolidColorBrush x:Key="Item.Normal.Border" Color="#FF555581"/>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#FF555581"/>
    <SolidColorBrush x:Key="Item.MouseOver.Foreground" Color="White"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#A840A01C"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#FF555581"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Gold"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FF555581"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Gold"/>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="#FFE6E1C1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="#FFE8E5D0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <DataTemplate x:Key="RunLogItemTemplate">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
            <TextBlock FontSize="16" HorizontalAlignment="Left" Text="{Binding Project}"/>
            <TextBlock FontSize="12" HorizontalAlignment="Left" Text="{Binding Summary}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="RunLogItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" 
            Value="{Binding HorizontalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
            Value="{Binding VerticalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Margin" Value="0,2" />
        <Setter Property="Background" Value="{StaticResource LogItem.Normal.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LogItem.Normal.Border}"/>
        <Setter Property="BorderThickness" Value="1,3,1,1"/>
        <Setter Property="Foreground" Value="{StaticResource LogItem.Normal.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter 
                            TextElement.Foreground="{TemplateBinding Foreground}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                                Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" 
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Status}" Value="Pass">
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource LogItem.Passed.Border}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Failed">
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource LogItem.Fail.Border}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="ProjectItemMenu">
        <MenuItem Header="Run Selected Project" Command="{Binding RunProjectCommand}"/>
    </ContextMenu>
    
    <ContextMenu x:Key="RunLogMenu">
        <MenuItem Header="View Report" Command="{Binding ViewReportCommand}"/>
        <MenuItem Header="Rerun Project" Command="{Binding RerunProjectCommand}"/>
    </ContextMenu>

    <DataTemplate x:Key="ProjectItemTemplate">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
            <TextBlock FontSize="18" HorizontalAlignment="Left" Text="{Binding Name}"/>
            <TextBlock FontSize="12" HorizontalAlignment="Left" Text="{Binding Path}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="ProjectItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" 
            Value="{Binding HorizontalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
            Value="{Binding VerticalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="{StaticResource Item.Normal.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Item.Normal.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource Item.Normal.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter 
                            TextElement.Foreground="{TemplateBinding Foreground}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                                Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource Item.MouseOver.Border}"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                                Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource Item.SelectedInactive.Border}"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                                Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource Item.SelectedActive.Border}"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" 
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RuleItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" 
            Value="{Binding HorizontalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
            Value="{Binding VerticalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="{StaticResource Item.Normal.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Item.Normal.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource Item.Normal.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            TextElement.Foreground="{TemplateBinding Foreground}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                                Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                Value="{StaticResource Item.MouseOver.Border}"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" 
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Mormal.Foreground" Color="Blue"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFF5F5E6"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Blue"/>
    
    <Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Button.Mormal.Foreground}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" SnapsToDevicePixels="true"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                RecognizesAccessKey="True"  
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>